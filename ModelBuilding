{"paragraphs":[{"text":"%spark\nimport org.apache.spark.mllib.linalg._\nimport org.apache.spark.mllib.stat.Statistics\nimport org.apache.spark.rdd.RDD\nimport org.apache.spark.ml.feature.{OneHotEncoder, StringIndexer}\nimport org.apache.spark.sql.functions._\nimport org.apache.spark.ml.feature.VectorAssembler\nimport org.apache.spark.ml.classification.LogisticRegression\nimport org.apache.spark.ml.Pipeline\nimport org.apache.spark.ml.{Pipeline, PipelineModel}\nimport org.apache.spark.ml.classification.LogisticRegression\nimport org.apache.spark.ml.feature.{HashingTF, Tokenizer}\nimport org.apache.spark.ml.linalg.Vector\nimport org.apache.spark.sql.Row\nimport org.apache.spark.ml.tuning.{CrossValidator, ParamGridBuilder}\nimport org.apache.spark.ml.evaluation.BinaryClassificationEvaluator\nimport org.apache.spark.ml.classification.MultilayerPerceptronClassifier\nimport org.apache.spark.ml.evaluation.MulticlassClassificationEvaluator\nimport org.apache.spark.mllib.util.MLUtils\nimport org.apache.spark.ml.classification.{RandomForestClassificationModel, RandomForestClassifier}\nimport org.apache.spark.ml.classification.LinearSVC\nimport org.apache.spark.ml.feature.PCA\n","dateUpdated":"2017-12-04T22:25:25+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import org.apache.spark.mllib.linalg._\nimport org.apache.spark.mllib.stat.Statistics\nimport org.apache.spark.rdd.RDD\nimport org.apache.spark.ml.feature.{OneHotEncoder, StringIndexer}\nimport org.apache.spark.sql.functions._\nimport org.apache.spark.ml.feature.VectorAssembler\nimport org.apache.spark.ml.classification.LogisticRegression\nimport org.apache.spark.ml.Pipeline\nimport org.apache.spark.ml.{Pipeline, PipelineModel}\nimport org.apache.spark.ml.classification.LogisticRegression\nimport org.apache.spark.ml.feature.{HashingTF, Tokenizer}\nimport org.apache.spark.ml.linalg.Vector\nimport org.apache.spark.sql.Row\nimport org.apache.spark.ml.tuning.{CrossValidator, ParamGridBuilder}\nimport org.apache.spark.ml.evaluation.BinaryClassificationEvaluator\nimport org.apache.spark.ml.classification.MultilayerPerceptronClassifier\nimport org.apache.spark.ml.evaluation.MulticlassClassificationEvaluator\nimport org.apache.spark.mllib.util.MLUtils\nimport org.apache.spark.ml.classification.{RandomForestClassificationModel, RandomForestClassifier}\nimport org.apache.spark.ml.classification.LinearSVC\nimport org.apache.spark.ml.feature.PCA\n"}]},"apps":[],"jobName":"paragraph_1512426325388_604156707","id":"20171201-200748_1423477923","dateCreated":"2017-12-04T22:25:25+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:1377"},{"text":"%spark\n//Reading transcations data\nval trans = spark.read.option(\"header\",\"true\").option(\"inferSchema\",\"true\").csv(\"s3://s3kkbox/transactions.csv\").cache\n//trans.count\n//trans.show()\n\nval order_trans = trans.orderBy(asc(\"transaction_date\")).cache\nval rows_trans = order_trans.rdd.cache\n//rows_trans.take(10)\n\nval mapd_trans = rows_trans.map(x => (x(0).toString,(x(6).toString.toDouble, x(7).toString.toDouble, x(8).toString.toDouble))).cache\n//mapd_trans.take(10)\n\n\nval redcd_trans = mapd_trans.groupByKey.mapValues(_.toList)\nredcd_trans.cache\n\n//redcd_trans.take(10)\n\n","dateUpdated":"2017-12-04T22:25:25+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"trans: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [msno: string, payment_method_id: int ... 7 more fields]\nres1: Long = 21547746\norder_trans: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [msno: string, payment_method_id: int ... 7 more fields]\nrows_trans: order_trans.rdd.type = MapPartitionsRDD[27] at rdd at <console>:54\nmapd_trans: org.apache.spark.rdd.RDD[(String, (Double, Double, Double))] = MapPartitionsRDD[28] at map at <console>:58\nredcd_trans: org.apache.spark.rdd.RDD[(String, List[(Double, Double, Double)])] = MapPartitionsRDD[30] at mapValues at <console>:61\nres9: redcd_trans.type = MapPartitionsRDD[30] at mapValues at <console>:61\n"}]},"apps":[],"jobName":"paragraph_1512426325388_604156707","id":"20171129-172118_1059337197","dateCreated":"2017-12-04T22:25:25+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:1378"},{"text":"//Analyze the transcations of the user and predict his behaviour\ndef compareTuples (a:List[(Double,Double,Double)]): Int = {\n   val count =0\n   val count1 =1\n   var diff =0.0\n   for(x<-2 to a.length)\n   {\n     diff = a(x-1)._1 - a(x-2)._2\n     if((diff>100 && diff<8870) ||( diff>=8900))\n       \n       { return count1}\n      \n   }\n   return count\n}\n\nvar result_trans=redcd_trans.map(x=>(x._1,compareTuples(x._2))).cache\n//result_trans.take(10)\n//result_trans.filter(x=>x._2==1).count\n","dateUpdated":"2017-12-04T22:25:25+0000","config":{"colWidth":13,"editorMode":"ace/mode/scala","results":{"0":{"graph":{"mode":"table","height":90,"optionOpen":false}}},"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"compareTuples: (a: List[(Double, Double, Double)])Int\nresult_trans: org.apache.spark.rdd.RDD[(String, Int)] = MapPartitionsRDD[187] at map at <console>:74\n"}]},"apps":[],"jobName":"paragraph_1512426325388_604156707","id":"20171129-175651_1420752400","dateCreated":"2017-12-04T22:25:25+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:1379"},{"text":"val behvr = result_trans.toDF(\"msno\": String, \"tran_behvr\": String).cache\n//behvr.show()","dateUpdated":"2017-12-04T22:25:25+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"behvr: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [msno: string, tran_behvr: int]\n"}]},"apps":[],"jobName":"paragraph_1512426325388_604156707","id":"20171130-214604_649613731","dateCreated":"2017-12-04T22:25:25+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:1380"},{"text":"//Reading User logs data\nval user = spark.read.option(\"header\",\"true\").option(\"inferSchema\",\"true\").csv(\"s3://s3kkbox/user_logs.csv\").cache\n\n//user.count\nval user_grp = user.groupBy(\"msno\").agg($\"msno\",sum(\"num_25\"),sum(\"num_50\"),sum(\"num_75\"),sum(\"num_985\"),sum(\"num_100\"),sum(\"num_unq\"),sum(\"total_secs\")).cache\n\nval train = spark.read.option(\"header\",\"true\").option(\"inferSchema\",\"true\").csv(\"s3://s3kkbox/train.csv\").cache\n\n\nval join=user_grp.join(train,\"msno\").cache\n\n\n\n","dateUpdated":"2017-12-04T22:25:25+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/scala","editorHide":false,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"user: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [msno: string, date: int ... 7 more fields]\nres15: Long = 392106543\nuser_grp: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [msno: string, msno: string ... 7 more fields]\ntrain: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [msno: string, is_churn: int]\njoin: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [msno: string, sum(num_25): bigint ... 7 more fields]\n"}]},"apps":[],"jobName":"paragraph_1512426325389_603771959","id":"20171129-180102_528737643","dateCreated":"2017-12-04T22:25:25+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:1381"},{"text":"\nval join_25=join.select(\"sum(num_25)\").map(r => r(0).toString.toDouble).rdd.cache\nval join_50=join.select(\"sum(num_50)\").map(r => r(0).toString.toDouble).rdd.cache\nval join_75=join.select(\"sum(num_75)\").map(r => r(0).toString.toDouble).rdd.cache\nval join_985=join.select(\"sum(num_985)\").map(r => r(0).toString.toDouble).rdd.cache\nval join_100=join.select(\"sum(num_100)\").map(r => r(0).toString.toDouble).rdd.cache\nval join_unq=join.select(\"sum(num_unq)\").map(r => r(0).toString.toDouble).rdd.cache\nval join_secs=join.select(\"sum(total_secs)\").map(r => r(0).toString.toDouble).rdd.cache\nval join_churn=join.select(\"is_churn\").map(r => r(0).toString.toDouble).rdd.cache\n\n\n\n","dateUpdated":"2017-12-04T22:25:25+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"join_25: org.apache.spark.rdd.RDD[Double] = MapPartitionsRDD[28] at rdd at <console>:39\njoin_50: org.apache.spark.rdd.RDD[Double] = MapPartitionsRDD[41] at rdd at <console>:38\njoin_75: org.apache.spark.rdd.RDD[Double] = MapPartitionsRDD[54] at rdd at <console>:38\njoin_985: org.apache.spark.rdd.RDD[Double] = MapPartitionsRDD[67] at rdd at <console>:38\njoin_100: org.apache.spark.rdd.RDD[Double] = MapPartitionsRDD[80] at rdd at <console>:38\njoin_unq: org.apache.spark.rdd.RDD[Double] = MapPartitionsRDD[93] at rdd at <console>:38\njoin_secs: org.apache.spark.rdd.RDD[Double] = MapPartitionsRDD[106] at rdd at <console>:38\njoin_churn: org.apache.spark.rdd.RDD[Double] = MapPartitionsRDD[119] at rdd at <console>:38\n"}]},"apps":[],"jobName":"paragraph_1512426325389_603771959","id":"20171129-174741_1064306698","dateCreated":"2017-12-04T22:25:25+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:1382"},{"text":"// val correlation_25: Double = Statistics.corr(join_25,join_churn, \"pearson\")\n//println(s\"Correlation is: $correlation_25\")","dateUpdated":"2017-12-04T22:25:42+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"correlation_25: Double = -0.01762807507199805\n"}]},"apps":[],"jobName":"paragraph_1512426325389_603771959","id":"20171129-203954_709492551","dateCreated":"2017-12-04T22:25:25+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:1383"},{"text":"// val correlation_50: Double = Statistics.corr(join_50,join_churn, \"pearson\")\n","dateUpdated":"2017-12-04T22:25:45+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"correlation_50: Double = -0.01648415513370276\n"}]},"apps":[],"jobName":"paragraph_1512426325389_603771959","id":"20171129-203958_419160207","dateCreated":"2017-12-04T22:25:25+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:1384"},{"text":"\n// val correlation_75: Double = Statistics.corr(join_75,join_churn, \"pearson\")\n","dateUpdated":"2017-12-04T22:25:47+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"correlation_75: Double = -0.019750370509550332\n"}]},"apps":[],"jobName":"paragraph_1512426325390_604926205","id":"20171129-172722_1446732928","dateCreated":"2017-12-04T22:25:25+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:1385"},{"text":"// val correlation_985: Double = Statistics.corr(join_985,join_churn, \"pearson\")","dateUpdated":"2017-12-04T22:25:49+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"correlation_985: Double = -0.01622923575502562\n"}]},"apps":[],"jobName":"paragraph_1512426325390_604926205","id":"20171129-202656_254296773","dateCreated":"2017-12-04T22:25:25+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:1386"},{"text":"\n// val correlation_100: Double = Statistics.corr(join_100,join_churn, \"pearson\")\n","dateUpdated":"2017-12-04T22:25:51+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"correlation_100: Double = -0.02516153738704202\n"}]},"apps":[],"jobName":"paragraph_1512426325390_604926205","id":"20171129-172242_348764862","dateCreated":"2017-12-04T22:25:25+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:1387"},{"text":"// val correlation_unq: Double = Statistics.corr(join_unq,join_churn, \"pearson\")","dateUpdated":"2017-12-04T22:25:53+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"correlation_unq: Double = -0.026503719517299178\n"}]},"apps":[],"jobName":"paragraph_1512426325390_604926205","id":"20171129-203919_1409722343","dateCreated":"2017-12-04T22:25:25+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:1388"},{"text":"// val correlation_secs: Double = Statistics.corr(join_secs,join_churn, \"pearson\")","dateUpdated":"2017-12-04T22:26:04+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"correlation_secs: Double = 0.0021949875922865\n"}]},"apps":[],"jobName":"paragraph_1512426325391_604541456","id":"20171129-205230_1359840272","dateCreated":"2017-12-04T22:25:25+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:1389"},{"text":"members_final.printSchema()","dateUpdated":"2017-12-04T22:25:25+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"root\n |-- msno: string (nullable = true)\n |-- city: integer (nullable = true)\n |-- gender: string (nullable = true)\n |-- registered_via: integer (nullable = true)\n |-- registration_init_time: integer (nullable = true)\n |-- registered_via_index: double (nullable = true)\n |-- city_index: double (nullable = true)\n |-- bd: double (nullable = true)\n\n"}]},"apps":[],"jobName":"paragraph_1512426325391_604541456","id":"20171129-230743_835645861","dateCreated":"2017-12-04T22:25:25+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:1390"},{"text":"//Joining user logs,members,behvr data \nval join1=user_grp.join(members_final,\"msno\").cache\nval join2=join1.join(behvr,\"msno\").cache\njoin2.printSchema()","dateUpdated":"2017-12-04T22:25:25+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"join1: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [msno: string, sum(num_25): bigint ... 13 more fields]\njoin2: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [msno: string, sum(num_25): bigint ... 14 more fields]\nroot\n |-- msno: string (nullable = true)\n |-- sum(num_25): long (nullable = true)\n |-- sum(num_50): long (nullable = true)\n |-- sum(num_75): long (nullable = true)\n |-- sum(num_985): long (nullable = true)\n |-- sum(num_100): long (nullable = true)\n |-- sum(num_unq): long (nullable = true)\n |-- sum(total_secs): double (nullable = true)\n |-- city: integer (nullable = true)\n |-- gender: string (nullable = true)\n |-- registered_via: integer (nullable = true)\n |-- registration_init_time: integer (nullable = true)\n |-- registered_via_index: double (nullable = true)\n |-- city_index: double (nullable = true)\n |-- bd: double (nullable = true)\n |-- tran_behvr: integer (nullable = false)\n\n"}]},"apps":[],"jobName":"paragraph_1512426325391_604541456","id":"20171129-235501_1146324475","dateCreated":"2017-12-04T22:25:25+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:1391"},{"text":"//Join with train data\nval train_df=train.join(join2,\"msno\").cache\ntrain_df.printSchema()\n//train_df.count()","dateUpdated":"2017-12-04T22:25:25+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"train_df: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [msno: string, is_churn: int ... 15 more fields]\nroot\n |-- msno: string (nullable = true)\n |-- is_churn: integer (nullable = true)\n |-- sum(num_25): long (nullable = true)\n |-- sum(num_50): long (nullable = true)\n |-- sum(num_75): long (nullable = true)\n |-- sum(num_985): long (nullable = true)\n |-- sum(num_100): long (nullable = true)\n |-- sum(num_unq): long (nullable = true)\n |-- sum(total_secs): double (nullable = true)\n |-- city: integer (nullable = true)\n |-- gender: string (nullable = true)\n |-- registered_via: integer (nullable = true)\n |-- registration_init_time: integer (nullable = true)\n |-- registered_via_index: double (nullable = true)\n |-- city_index: double (nullable = true)\n |-- bd: double (nullable = true)\n |-- tran_behvr: integer (nullable = false)\n\nres51: Long = 869900\n"}]},"apps":[],"jobName":"paragraph_1512426325392_614929677","id":"20171130-220026_1872144955","dateCreated":"2017-12-04T22:25:25+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:1392"},{"text":"val traindf=train_df.drop(\"gender\",\"registered_via\",\"city\",\"registration_init_time\").cache","dateUpdated":"2017-12-04T22:25:25+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"traindf: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [msno: string, is_churn: int ... 11 more fields]\n"}]},"apps":[],"jobName":"paragraph_1512426325392_614929677","id":"20171130-220851_605016325","dateCreated":"2017-12-04T22:25:25+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:1393"},{"text":"//Splitting the data in train and test set\nval Array(trainset, testset) = traindf.randomSplit(Array(0.8, 0.2))","dateUpdated":"2017-12-04T22:25:25+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"trainset: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [msno: string, is_churn: int ... 11 more fields]\ntestset: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [msno: string, is_churn: int ... 11 more fields]\n"}]},"apps":[],"jobName":"paragraph_1512426325392_614929677","id":"20171201-061743_192868804","dateCreated":"2017-12-04T22:25:25+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:1394"},{"text":"trainset.show","dateUpdated":"2017-12-04T22:25:25+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+--------------------+--------+-----------+-----------+-----------+------------+------------+------------+------------------+--------------------+----------+----+----------+\n|                msno|is_churn|sum(num_25)|sum(num_50)|sum(num_75)|sum(num_985)|sum(num_100)|sum(num_unq)|   sum(total_secs)|registered_via_index|city_index|  bd|tran_behvr|\n+--------------------+--------+-----------+-----------+-----------+------------+------------+------------+------------------+--------------------+----------+----+----------+\n|++4RuqBw0Ss6bQU4o...|       0|       3164|        557|        382|         289|        5863|        9212|1719500.2660000003|                 3.0|       0.0| 3.0|         1|\n|+/namlXq+u3izRjHC...|       0|       2457|        168|        140|         142|        3373|        5430| 952643.0590000001|                 2.0|       5.0|15.0|         1|\n|+0/X9tkmyHyet9X80...|       0|       2797|        719|        529|         563|       19586|       18988| 5130378.050999999|                 2.0|       9.0|15.0|         1|\n|+09YGn842g6h2EZUX...|       0|       2461|        648|        435|         396|       29245|       27508|         7508563.4|                 2.0|       5.0|12.0|         1|\n|+0RJtbyhoPAHPa+34...|       1|       1124|        422|        331|         433|       12465|       12039|3139781.1410000008|                 1.0|       2.0|12.0|         0|\n|+0jTOa6KGPk1vtNTw...|       0|       3317|       1648|        653|         506|       10166|       13327|       2831811.704|                 2.0|       1.0| 5.0|         1|\n|+0l+FDuhyjaZnu0AP...|       0|       2491|        494|        262|         169|        8849|       10868| 2289759.486000001|                 1.0|       2.0|14.0|         1|\n|+0l/WkoOIugT69NYa...|       0|        978|        263|        214|         539|       15934|       16394| 4083086.095999999|                 1.0|       1.0| 1.0|         1|\n|+2Df04hr61UUJijMM...|       0|       1074|        318|        192|         250|       52506|       11511|       9972893.731|                 2.0|       6.0|15.0|         1|\n|+2sYXqnHWBACTG4Py...|       0|       1018|         96|         70|          66|        1873|        2385|         516564.95|                 3.0|       0.0| 3.0|         1|\n|+2vC1rM36Emx77Uan...|       0|      16586|       2490|       1231|        1050|       19413|       36395| 5406857.445000001|                 3.0|       0.0| 3.0|         1|\n|+43UqHvqzu5STDVIu...|       0|       1142|        634|        368|         374|        8108|        8538|2236741.5109999995|                 2.0|       1.0|35.0|         0|\n|+4XdQOd2lqwKAzUkL...|       0|        193|         62|         56|          30|        1903|        1977|        483608.035|                 2.0|       0.0| 3.0|         1|\n|+5DvJ9JGZqYFJ+tSv...|       0|         70|          2|          3|           2|          16|          52|          6547.239|                 3.0|       0.0| 3.0|         0|\n|+5iq4ECBqIcAbIVw0...|       0|        946|        410|        303|         226|        8321|        8402|       2067320.065|                 1.0|       1.0|48.0|         1|\n|+A0cjGlj9lHusZoz5...|       0|        167|         33|         32|          34|         724|         786|        192541.319|                 3.0|       0.0| 3.0|         1|\n|+A534cfk3ylNGsQ3d...|       0|       3087|        959|        348|         238|       11127|       13025|       3039887.376|                 1.0|       2.0| 2.0|         1|\n|+ATFgONEGyBD3TL5v...|       0|        439|        176|        106|          98|        2615|        3043| 665195.9369999998|                 3.0|       0.0| 3.0|         0|\n|+CrGxwBBuor4ongyv...|       0|       1965|        418|        312|         366|        3294|        4868|        977190.737|                 3.0|       0.0| 3.0|         1|\n|+CxpeunCurqn2VGy3...|       0|        333|         77|         59|          54|         627|         747|193619.89199999993|                 0.0|       0.0|11.0|         0|\n+--------------------+--------+-----------+-----------+-----------+------------+------------+------------+------------------+--------------------+----------+----+----------+\nonly showing top 20 rows\n\n"}]},"apps":[],"jobName":"paragraph_1512426325392_614929677","id":"20171130-223650_298417210","dateCreated":"2017-12-04T22:25:25+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:1395"},{"text":"//Convert columns to feature vector\r\nval assembler_train = new VectorAssembler().setInputCols(Array(\"sum(num_25)\",\"sum(num_50)\",\"sum(num_75)\",\"sum(num_985)\",\"sum(num_100)\",\"sum(num_unq)\",\"sum(total_secs)\",\"registered_via_index\",\"city_index\",\"bd\",\"tran_behvr\")).setOutputCol(\"features\")\r\n    \r\n   ","dateUpdated":"2017-12-04T22:25:25+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"assembler_train: org.apache.spark.ml.feature.VectorAssembler = vecAssembler_7da352a7107f\n"}]},"apps":[],"jobName":"paragraph_1512426325393_614544928","id":"20171130-223815_1658436660","dateCreated":"2017-12-04T22:25:25+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:1396"},{"text":"//PCA\r\nval assm_train = assembler_train.transform(traindf)\r\n\r\nval pca = new PCA().setInputCol(\"features\").setOutputCol(\"pcaFeatures\").setK(4).fit(assm_train)\r\n\r\n//Split the data 80:20 into train and test\r\nval result_pca = pca.transform(assm_train)\r\nval Array(trainsetp, testsetp) = result_pca.randomSplit(Array(0.8, 0.2))","dateUpdated":"2017-12-04T22:25:25+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"assm_train: org.apache.spark.sql.DataFrame = [msno: string, is_churn: int ... 12 more fields]\npca: org.apache.spark.ml.feature.PCAModel = pca_d852d3b6e14c\nresult_pca: org.apache.spark.sql.DataFrame = [msno: string, is_churn: int ... 13 more fields]\ntrainsetp: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [msno: string, is_churn: int ... 13 more fields]\ntestsetp: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [msno: string, is_churn: int ... 13 more fields]\n"}]},"apps":[],"jobName":"paragraph_1512426325393_614544928","id":"20171201-221031_1101445909","dateCreated":"2017-12-04T22:25:25+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:1397"},{"text":"//Logistic regression model\r\n\r\nval lr = new LogisticRegression()\r\n  .setMaxIter(5)\r\n  .setRegParam(0.5)\r\n  .setElasticNetParam(0.8)\r\n  .setLabelCol(\"is_churn\")\r\n  .setFamily(\"multinomial\")\r\n  \r\n//Build pipeline\r\nval pipeline_lr = new Pipeline()\r\n  .setStages(Array(assembler_train,lr))\r\n //Build Paramgrid \r\n  val paramGrid_lr = new ParamGridBuilder()\r\n  .addGrid(lr.threshold, Array(0.1,0.5,0.6))\r\n  .addGrid(lr.regParam, Array(0.1,0.001,0.0001))\r\n  .addGrid(lr.maxIter, Array(10,20,30))\r\n  .build()\r\nval evaluator_lr = new MulticlassClassificationEvaluator().setLabelCol(\"is_churn\")\r\n//Build cross validator with 5 folds\r\nval cv_lr = new CrossValidator()\r\n  .setEstimator(pipeline_lr)\r\n  .setEstimatorParamMaps(paramGrid_lr)\r\n  .setEvaluator(evaluator_lr)\r\n  .setNumFolds(5)","dateUpdated":"2017-12-04T22:25:25+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"lr: org.apache.spark.ml.classification.LogisticRegression = logreg_ebf558156dcd\npipeline_lr: org.apache.spark.ml.Pipeline = pipeline_7341ff15b907\nparamGrid_lr: Array[org.apache.spark.ml.param.ParamMap] =\nArray({\n\tlogreg_ebf558156dcd-maxIter: 10,\n\tlogreg_ebf558156dcd-regParam: 0.1,\n\tlogreg_ebf558156dcd-threshold: 0.1\n}, {\n\tlogreg_ebf558156dcd-maxIter: 20,\n\tlogreg_ebf558156dcd-regParam: 0.1,\n\tlogreg_ebf558156dcd-threshold: 0.1\n}, {\n\tlogreg_ebf558156dcd-maxIter: 30,\n\tlogreg_ebf558156dcd-regParam: 0.1,\n\tlogreg_ebf558156dcd-threshold: 0.1\n}, {\n\tlogreg_ebf558156dcd-maxIter: 10,\n\tlogreg_ebf558156dcd-regParam: 0.001,\n\tlogreg_ebf558156dcd-threshold: 0.1\n}, {\n\tlogreg_ebf558156dcd-maxIter: 20,\n\tlogreg_ebf558156dcd-regParam: 0.001,\n\tlogreg_ebf558156dcd-threshold: 0.1\n}, {\n\tlogreg_ebf558156dcd-maxIter: 30,\n\tlogreg_ebf558156dcd-regParam: 0.001,\n\tlogreg_ebf558156dcd-threshold: 0.1\n}, {\n\tlogreg_ebf558156dcd-maxIter: 10,\n\tlogreg_ebf558156dcd-regP...evaluator_lr: org.apache.spark.ml.evaluation.MulticlassClassificationEvaluator = mcEval_007ffd824c17\ncv_lr: org.apache.spark.ml.tuning.CrossValidator = cv_fec65950496c\n"}]},"apps":[],"jobName":"paragraph_1512426325393_614544928","id":"20171130-223929_1804972507","dateCreated":"2017-12-04T22:25:25+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:1398"},{"text":"//Building model \r\nval model_train_lr = cv_lr.fit(trainset)\r\n//Applying the model on test data\r\nval result_lr = model_train_lr.transform(testset)\r\n//Selecting prediction and label columns\r\nval predictionAndLabels_lr = result_lr.select(\"rawPrediction\",\"prediction\", \"is_churn\")","dateUpdated":"2017-12-04T22:25:25+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"model_train_lr: org.apache.spark.ml.tuning.CrossValidatorModel = cv_9225961b2947\nresult_lr: org.apache.spark.sql.DataFrame = [msno: string, is_churn: int ... 15 more fields]\npredictionAndLabels_lr: org.apache.spark.sql.DataFrame = [rawPrediction: vector, prediction: double ... 1 more field]\n"}]},"apps":[],"jobName":"paragraph_1512426325394_615699174","id":"20171201-050859_2039006230","dateCreated":"2017-12-04T22:25:25+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:1399"},{"text":"println(\"Evaluation of Logistic Regression model without dimensionality reduction\")\nval evaluator_lr = new MulticlassClassificationEvaluator().setMetricName(\"weightedPrecision\").setLabelCol(\"is_churn\")\nprintln(\"Precision:\" + evaluator_lr.evaluate(predictionAndLabels_lr))\nval evaluator1_lr = new MulticlassClassificationEvaluator().setMetricName(\"weightedRecall\").setLabelCol(\"is_churn\")\nprintln(\"Recall:\" + evaluator1_lr.evaluate(predictionAndLabels_lr))","dateUpdated":"2017-12-04T22:25:25+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"Evaluation of Logistic Regression model without dimensionality reduction\nevaluator_lr: org.apache.spark.ml.evaluation.MulticlassClassificationEvaluator = mcEval_5f6345ad4131\nPrecision:0.902268223713642\nevaluator1_lr: org.apache.spark.ml.evaluation.MulticlassClassificationEvaluator = mcEval_0dd78748a94c\nRecall:0.9338445407199152\n"}]},"apps":[],"jobName":"paragraph_1512426325394_615699174","id":"20171201-062138_2140177166","dateCreated":"2017-12-04T22:25:25+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:1400"},{"text":"//Logistic Regeression\r\nval lr_pca = new LogisticRegression()\r\n  .setMaxIter(10)\r\n  .setRegParam(0.5)\r\n  .setThreshold(0.5)\r\n  .setElasticNetParam(0.8)\r\n  .setLabelCol(\"is_churn\")\r\n  .setFamily(\"multinomial\")\r\nval pipeline_lr_pca = new Pipeline()\r\n  .setStages(Array(lr_pca))\r\nval paramGrid_lr_pca = new ParamGridBuilder()\r\n  .addGrid(lr_pca.threshold, Array(0.1,0.5,0.6))\r\n  .addGrid(lr_pca.regParam, Array(0.1,0.2,0.01))\r\n  .addGrid(lr_pca.maxIter, Array(10,25,30))\r\n  .build()\r\nval evaluator_lr_pca = new BinaryClassificationEvaluator().setLabelCol(\"is_churn\")\r\nval cv_lr_pca = new CrossValidator()\r\n  .setEstimator(pipeline_lr_pca)\r\n  .setEstimatorParamMaps(paramGrid_lr_pca)\r\n  .setEvaluator(evaluator_lr_pca)\r\n  .setNumFolds(5)","dateUpdated":"2017-12-04T22:25:25+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"lr_pca: org.apache.spark.ml.classification.LogisticRegression = logreg_6537be69c895\npipeline_lr_pca: org.apache.spark.ml.Pipeline = pipeline_0b7aa4c9ea35\nparamGrid_lr_pca: Array[org.apache.spark.ml.param.ParamMap] =\nArray({\n\tlogreg_6537be69c895-maxIter: 10,\n\tlogreg_6537be69c895-regParam: 0.1,\n\tlogreg_6537be69c895-threshold: 0.1\n}, {\n\tlogreg_6537be69c895-maxIter: 10,\n\tlogreg_6537be69c895-regParam: 0.2,\n\tlogreg_6537be69c895-threshold: 0.1\n}, {\n\tlogreg_6537be69c895-maxIter: 10,\n\tlogreg_6537be69c895-regParam: 0.01,\n\tlogreg_6537be69c895-threshold: 0.1\n}, {\n\tlogreg_6537be69c895-maxIter: 10,\n\tlogreg_6537be69c895-regParam: 0.1,\n\tlogreg_6537be69c895-threshold: 0.5\n}, {\n\tlogreg_6537be69c895-maxIter: 10,\n\tlogreg_6537be69c895-regParam: 0.2,\n\tlogreg_6537be69c895-threshold: 0.5\n}, {\n\tlogreg_6537be69c895-maxIter: 10,\n\tlogreg_6537be69c895-regParam: 0.01,\n\tlogreg_6537be69c895-threshold: 0.5\n}, {\n\tlogreg_6537be69c895-maxIter: 10,\n\tlogreg_6537be69c895-regP...evaluator_lr_pca: org.apache.spark.ml.evaluation.BinaryClassificationEvaluator = binEval_619aa34b289f\ncv_lr_pca: org.apache.spark.ml.tuning.CrossValidator = cv_b30d9c1b56d4\n"}]},"apps":[],"jobName":"paragraph_1512426325394_615699174","id":"20171201-220943_1497318787","dateCreated":"2017-12-04T22:25:25+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:1401"},{"text":"val model_lr_pca = cv_lr_pca.fit(trainsetp)\r\nval result_lr_pca = model_lr_pca.transform(testsetp)\r\nval predictionAndLabels_lr_pca = result_lr_pca.select(\"prediction\", \"is_churn\")","dateUpdated":"2017-12-04T22:25:25+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"model_lr_pca: org.apache.spark.ml.tuning.CrossValidatorModel = cv_28ff6b16d43c\nresult_lr_pca: org.apache.spark.sql.DataFrame = [msno: string, is_churn: int ... 16 more fields]\npredictionAndLabels_lr_pca: org.apache.spark.sql.DataFrame = [prediction: double, is_churn: int]\n"}]},"apps":[],"jobName":"paragraph_1512426325395_615314426","id":"20171201-220941_1151268736","dateCreated":"2017-12-04T22:25:25+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:1402"},{"text":"println(\"Evaluation of Logistic Regression model with dimensionality reduction\")\r\nval evaluator_lr_pca = new MulticlassClassificationEvaluator().setMetricName(\"weightedPrecision\").setLabelCol(\"is_churn\")\r\nprintln(\"Precision:\" + evaluator_lr.evaluate(predictionAndLabels_lr_pca))\r\nval evaluator1_lr_pca = new MulticlassClassificationEvaluator().setMetricName(\"weightedRecall\").setLabelCol(\"is_churn\")\r\nprintln(\"Recall:\" + evaluator1_lr_pca.evaluate(predictionAndLabels_lr_pca))","dateUpdated":"2017-12-04T22:25:25+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"Evaluation of Logistic Regression model with dimensionality reduction\nevaluator_lr_pca: org.apache.spark.ml.evaluation.MulticlassClassificationEvaluator = mcEval_6d52082d9441\nPrecision:0.9020167550630386\nevaluator1_lr_pca: org.apache.spark.ml.evaluation.MulticlassClassificationEvaluator = mcEval_35631abbb175\nRecall:0.933925332353684\n"}]},"apps":[],"jobName":"paragraph_1512426325395_615314426","id":"20171201-221946_215110800","dateCreated":"2017-12-04T22:25:25+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:1403"},{"text":"//Random Forest Classifier\nval rf = new RandomForestClassifier()\n  .setLabelCol(\"is_churn\")\n  .setFeaturesCol(\"features\")\n  .setNumTrees(15)\n  .setMaxDepth(4)\n//Build pipeline for Random Forest Classifier\nval pipeline_rf = new Pipeline()\n  .setStages(Array(assembler_train,rf))\n//Build Paramgrid Builder for Random Forest Classifier\nval paramGrid_rf = new ParamGridBuilder()\n  .addGrid(rf.numTrees, Array(10,20))\n  .addGrid(rf.maxDepth, Array(3,4))\n  .build()\n//Build evaluator for Random Forest Classifier\nval evaluator = new MulticlassClassificationEvaluator().setLabelCol(\"is_churn\")\n//Build cross validator for Random Forest Classifier with 5 folds\nval cv_rf = new CrossValidator()\n  .setEstimator(pipeline_rf)\n  .setEstimatorParamMaps(paramGrid_rf)\n  .setEvaluator(evaluator)\n  .setNumFolds(5)","dateUpdated":"2017-12-04T22:25:25+0000","config":{"lineNumbers":false,"editorSetting":{"language":"scala","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"rf: org.apache.spark.ml.classification.RandomForestClassifier = rfc_3adba449f081\npipeline_rf: org.apache.spark.ml.Pipeline = pipeline_ee803e1c8638\nparamGrid_rf: Array[org.apache.spark.ml.param.ParamMap] =\nArray({\n\trfc_3adba449f081-maxDepth: 3,\n\trfc_3adba449f081-numTrees: 10\n}, {\n\trfc_3adba449f081-maxDepth: 3,\n\trfc_3adba449f081-numTrees: 20\n}, {\n\trfc_3adba449f081-maxDepth: 4,\n\trfc_3adba449f081-numTrees: 10\n}, {\n\trfc_3adba449f081-maxDepth: 4,\n\trfc_3adba449f081-numTrees: 20\n})\nevaluator: org.apache.spark.ml.evaluation.MulticlassClassificationEvaluator = mcEval_af438c5b55e9\ncv_rf: org.apache.spark.ml.tuning.CrossValidator = cv_38f9724f6a6c\n"}]},"apps":[],"jobName":"paragraph_1512426325396_613390681","id":"20171130-233658_831113791","dateCreated":"2017-12-04T22:25:25+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:1404"},{"text":"val model_rf = cv_rf.fit(trainset)\n//Apply test data on the model\nval result_rf = model_rf.transform(testset)\n//Select predication and label columns\nval predictionAndLabels_rf = result_rf.select(\"rawPrediction\",\"prediction\", \"is_churn\")","dateUpdated":"2017-12-04T22:25:25+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"model_rf: org.apache.spark.ml.tuning.CrossValidatorModel = cv_38f9724f6a6c\nresult_rf: org.apache.spark.sql.DataFrame = [msno: string, is_churn: int ... 15 more fields]\npredictionAndLabels_rf: org.apache.spark.sql.DataFrame = [rawPrediction: vector, prediction: double ... 1 more field]\n"}]},"apps":[],"jobName":"paragraph_1512426325396_613390681","id":"20171201-005229_746006462","dateCreated":"2017-12-04T22:25:25+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:1405"},{"text":"println(\"Evaluation of Random Forest model without dimensionality reduction\")\nval evaluator_rf = new MulticlassClassificationEvaluator().setMetricName(\"weightedPrecision\").setLabelCol(\"is_churn\")\nprintln(\"Precision:\" + evaluator_rf.evaluate(predictionAndLabels_rf))\nval evaluator1_rf = new MulticlassClassificationEvaluator().setMetricName(\"weightedRecall\").setLabelCol(\"is_churn\")\nprintln(\"Recall:\" + evaluator1_rf.evaluate(predictionAndLabels_rf))","dateUpdated":"2017-12-04T22:25:25+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"Evaluation of Random Forest model without dimensionality reduction\nevaluator_rf: org.apache.spark.ml.evaluation.MulticlassClassificationEvaluator = mcEval_606e94ee5569\nPrecision:0.9097915761105191\nevaluator1_rf: org.apache.spark.ml.evaluation.MulticlassClassificationEvaluator = mcEval_71339b3d4fbb\nRecall:0.9340404203346084\n"}]},"apps":[],"jobName":"paragraph_1512426325396_613390681","id":"20171201-060746_1081810635","dateCreated":"2017-12-04T22:25:25+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:1406"},{"text":"// SVM\nval svm = new LinearSVC()\n  .setMaxIter(10)\n  .setRegParam(0.1)\n  .setLabelCol(\"is_churn\")\n  \n//Build pipeline for SVM Classifier\nval pipeline_svm = new Pipeline()\n  .setStages(Array(assembler_train,svm))\n//Build Paramgrid Builder for SVM Classifier\n val paramGrid_svm = new ParamGridBuilder()\n  .addGrid(svm.threshold, Array(0.1,0.5))\n  .addGrid(svm.regParam, Array(0.1,0.001))\n  .addGrid(svm.maxIter, Array(10,20))\n  .build()\n//Build evaluator for SVM Classifier\nval evaluator = new MulticlassClassificationEvaluator().setLabelCol(\"is_churn\")\n//Build cross validator for Random Forest Classifier with 5 folds\nval cv_svm = new CrossValidator()\n  .setEstimator(pipeline_svm)\n  .setEstimatorParamMaps(paramGrid_svm)\n  .setEvaluator(evaluator)\n  .setNumFolds(3)","dateUpdated":"2017-12-04T22:25:25+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"svm: org.apache.spark.ml.classification.LinearSVC = linearsvc_2d2926bfe800\npipeline_svm: org.apache.spark.ml.Pipeline = pipeline_f3afe64769f1\nparamGrid_svm: Array[org.apache.spark.ml.param.ParamMap] =\nArray({\n\tlinearsvc_2d2926bfe800-maxIter: 10,\n\tlinearsvc_2d2926bfe800-regParam: 0.1,\n\tlinearsvc_2d2926bfe800-threshold: 0.1\n}, {\n\tlinearsvc_2d2926bfe800-maxIter: 10,\n\tlinearsvc_2d2926bfe800-regParam: 0.001,\n\tlinearsvc_2d2926bfe800-threshold: 0.1\n}, {\n\tlinearsvc_2d2926bfe800-maxIter: 10,\n\tlinearsvc_2d2926bfe800-regParam: 0.1,\n\tlinearsvc_2d2926bfe800-threshold: 0.5\n}, {\n\tlinearsvc_2d2926bfe800-maxIter: 10,\n\tlinearsvc_2d2926bfe800-regParam: 0.001,\n\tlinearsvc_2d2926bfe800-threshold: 0.5\n}, {\n\tlinearsvc_2d2926bfe800-maxIter: 20,\n\tlinearsvc_2d2926bfe800-regParam: 0.1,\n\tlinearsvc_2d2926bfe800-threshold: 0.1\n}, {\n\tlinearsvc_2d2926bfe800-maxIter: 20,\n\tlinearsvc_2d2926bfe800-regParam: 0.001,\n\tlinearsvc_2d2926bfe800-threshold: 0.1\n}, {\n\tlin...evaluator: org.apache.spark.ml.evaluation.MulticlassClassificationEvaluator = mcEval_7c1fc0563179\ncv_svm: org.apache.spark.ml.tuning.CrossValidator = cv_f69209a4431e\n"}]},"apps":[],"jobName":"paragraph_1512426325397_613005932","id":"20171201-201520_270973802","dateCreated":"2017-12-04T22:25:25+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:1407"},{"text":"val model_svm = cv_svm.fit(trainset)\n//Apply test data on the model\nval result_svm = model_svm.transform(testset)\n//Select predication and label columns\nval predictionAndLabels_svm = result_svm.select(\"prediction\", \"is_churn\")","dateUpdated":"2017-12-04T22:25:25+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"model_svm: org.apache.spark.ml.tuning.CrossValidatorModel = cv_f69209a4431e\nresult_svm: org.apache.spark.sql.DataFrame = [msno: string, is_churn: int ... 14 more fields]\npredictionAndLabels_svm: org.apache.spark.sql.DataFrame = [prediction: double, is_churn: int]\n"}]},"apps":[],"jobName":"paragraph_1512426325397_613005932","id":"20171201-203638_881513839","dateCreated":"2017-12-04T22:25:25+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:1408"},{"text":"println(\"Evaluation of SVM model without dimensionality reduction\")\nval evaluator_svm = new MulticlassClassificationEvaluator().setMetricName(\"weightedPrecision\").setLabelCol(\"is_churn\")\nprintln(\"Precision:\" + evaluator_svm.evaluate(predictionAndLabels_svm))\nval evaluator1_svm = new MulticlassClassificationEvaluator().setMetricName(\"weightedRecall\").setLabelCol(\"is_churn\")\nprintln(\"Recall:\" + evaluator1_svm.evaluate(predictionAndLabels_svm))","dateUpdated":"2017-12-04T22:25:25+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"Evaluation of SVM model without dimensionality reduction\nevaluator_svm: org.apache.spark.ml.evaluation.MulticlassClassificationEvaluator = mcEval_188e182a2776\nPrecision:0.8732377304408164\nevaluator1_svm: org.apache.spark.ml.evaluation.MulticlassClassificationEvaluator = mcEval_8870763ed4b4\nRecall:0.9344718992248062\n"}]},"apps":[],"jobName":"paragraph_1512426325397_613005932","id":"20171201-203729_1387099268","dateCreated":"2017-12-04T22:25:25+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:1409"},{"text":"//Random classifier\r\nval rf_pca = new RandomForestClassifier()\r\n  .setLabelCol(\"is_churn\")\r\n  .setFeaturesCol(\"features\")\r\n  .setNumTrees(15)\r\n  .setMaxDepth(3)\r\nval pipeline_rf_pca = new Pipeline()\r\n  .setStages(Array(rf_pca))\r\nval paramGrid_rf_pca = new ParamGridBuilder()\r\n  .addGrid(rf.numTrees, Array(10,20))\r\n  .addGrid(rf.maxDepth, Array(3,4))\r\n  .build()\r\nval evaluator_rf_pca = new BinaryClassificationEvaluator().setLabelCol(\"is_churn\")\r\nval cv_rf_pca = new CrossValidator()\r\n  .setEstimator(pipeline_rf_pca)\r\n  .setEstimatorParamMaps(paramGrid_rf_pca)\r\n  .setEvaluator(evaluator_rf_pca)\r\n  .setNumFolds(2)","dateUpdated":"2017-12-04T22:25:25+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"rf_pca: org.apache.spark.ml.classification.RandomForestClassifier = rfc_2068a8256d11\npipeline_rf_pca: org.apache.spark.ml.Pipeline = pipeline_52578a91f112\nparamGrid_rf_pca: Array[org.apache.spark.ml.param.ParamMap] =\nArray({\n\trfc_3adba449f081-maxDepth: 3,\n\trfc_3adba449f081-numTrees: 10\n}, {\n\trfc_3adba449f081-maxDepth: 3,\n\trfc_3adba449f081-numTrees: 20\n}, {\n\trfc_3adba449f081-maxDepth: 4,\n\trfc_3adba449f081-numTrees: 10\n}, {\n\trfc_3adba449f081-maxDepth: 4,\n\trfc_3adba449f081-numTrees: 20\n})\nevaluator_rf_pca: org.apache.spark.ml.evaluation.BinaryClassificationEvaluator = binEval_bfb201bfdf4e\ncv_rf_pca: org.apache.spark.ml.tuning.CrossValidator = cv_58619f9c1204\n"}]},"apps":[],"jobName":"paragraph_1512426325398_614160179","id":"20171201-214725_1880560804","dateCreated":"2017-12-04T22:25:25+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:1410"},{"text":"val model_rf_pca = cv_rf_pca.fit(trainsetp)\r\nval result_rf_pca = model_rf_pca.transform(testsetp)\r\nval predictionAndLabels_rf_pca = result_rf_pca.select(\"prediction\",\"rawPrediction\", \"is_churn\")","dateUpdated":"2017-12-04T22:25:25+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"model_rf_pca: org.apache.spark.ml.tuning.CrossValidatorModel = cv_58619f9c1204\nresult_rf_pca: org.apache.spark.sql.DataFrame = [msno: string, is_churn: int ... 16 more fields]\npredictionAndLabels_rf_pca: org.apache.spark.sql.DataFrame = [prediction: double, rawPrediction: vector ... 1 more field]\n"}]},"apps":[],"jobName":"paragraph_1512426325398_614160179","id":"20171201-213402_211054835","dateCreated":"2017-12-04T22:25:25+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:1411"},{"text":"println(\"Evaluation of Random Forest model with dimensionality reduction\")\r\nval evaluator_rf_pca = new MulticlassClassificationEvaluator().setMetricName(\"weightedPrecision\").setLabelCol(\"is_churn\")\r\nprintln(\"Precision:\" + evaluator_rf_pca.evaluate(predictionAndLabels_rf_pca))\r\nval evaluator1_rf_pca = new MulticlassClassificationEvaluator().setMetricName(\"weightedRecall\").setLabelCol(\"is_churn\")\r\nprintln(\"Recall:\" + evaluator1_rf_pca.evaluate(predictionAndLabels_rf_pca))","dateUpdated":"2017-12-04T22:25:25+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"Evaluation of Random Forest model with dimensionality reduction\nevaluator_rf_pca: org.apache.spark.ml.evaluation.MulticlassClassificationEvaluator = mcEval_1abd4cf73340\nPrecision:0.7385621013969592\nevaluator1_rf_pca: org.apache.spark.ml.evaluation.MulticlassClassificationEvaluator = mcEval_1f3db1bc719e\nRecall:0.933925332353684\n"}]},"apps":[],"jobName":"paragraph_1512426325398_614160179","id":"20171201-213726_1819433386","dateCreated":"2017-12-04T22:25:25+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:1412"},{"text":"//Build SVM\nval svm_pca = new LinearSVC()\n  .setMaxIter(10)\n  .setRegParam(0.5)\n  .setLabelCol(\"is_churn\")\n  \n//Build pipeline for SVM Classifier\nval pipeline_svm_pca = new Pipeline()\n  .setStages(Array(svm_pca))\n//Build Paramgrid Builder for SVM Classifier\n val paramGrid_svm_pca = new ParamGridBuilder()\n  .addGrid(svm_pca.threshold, Array(0.1,0.5))\n  .addGrid(svm_pca.regParam, Array(0.1,0.001))\n  .addGrid(svm_pca.maxIter, Array(10,20))\n  .build()\n//Build evaluator for SVM Classifier\nval evaluator_svm_pca = new MulticlassClassificationEvaluator().setLabelCol(\"is_churn\")\n//Build cross validator for SVM Classifier with 5 folds\nval cv_svm_pca = new CrossValidator()\n  .setEstimator(pipeline_svm_pca)\n  .setEstimatorParamMaps(paramGrid_svm_pca)\n  .setEvaluator(evaluator_svm_pca)\n  .setNumFolds(3)","dateUpdated":"2017-12-04T22:25:25+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"svm_pca: org.apache.spark.ml.classification.LinearSVC = linearsvc_574abbf0f26d\npipeline_svm_pca: org.apache.spark.ml.Pipeline = pipeline_4747a2c166f6\nparamGrid_svm_pca: Array[org.apache.spark.ml.param.ParamMap] =\nArray({\n\tlinearsvc_574abbf0f26d-maxIter: 10,\n\tlinearsvc_574abbf0f26d-regParam: 0.1,\n\tlinearsvc_574abbf0f26d-threshold: 0.1\n}, {\n\tlinearsvc_574abbf0f26d-maxIter: 10,\n\tlinearsvc_574abbf0f26d-regParam: 0.1,\n\tlinearsvc_574abbf0f26d-threshold: 0.5\n}, {\n\tlinearsvc_574abbf0f26d-maxIter: 10,\n\tlinearsvc_574abbf0f26d-regParam: 0.001,\n\tlinearsvc_574abbf0f26d-threshold: 0.1\n}, {\n\tlinearsvc_574abbf0f26d-maxIter: 10,\n\tlinearsvc_574abbf0f26d-regParam: 0.001,\n\tlinearsvc_574abbf0f26d-threshold: 0.5\n}, {\n\tlinearsvc_574abbf0f26d-maxIter: 20,\n\tlinearsvc_574abbf0f26d-regParam: 0.1,\n\tlinearsvc_574abbf0f26d-threshold: 0.1\n}, {\n\tlinearsvc_574abbf0f26d-maxIter: 20,\n\tlinearsvc_574abbf0f26d-regParam: 0.1,\n\tlinearsvc_574abbf0f26d-threshold: 0.5\n}, {\n\tl...evaluator_svm_pca: org.apache.spark.ml.evaluation.MulticlassClassificationEvaluator = mcEval_45f75efc659d\ncv_svm_pca: org.apache.spark.ml.tuning.CrossValidator = cv_f9839e31f655\n"}]},"apps":[],"jobName":"paragraph_1512426325399_613775430","id":"20171201-215948_877503643","dateCreated":"2017-12-04T22:25:25+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:1413"},{"text":"val model_svm_pca = cv_svm_pca.fit(trainsetp)\n//Apply test data on the model\nval result_svm_pca = model_svm_pca.transform(testsetp)\n//Select predication and label columns\nval predictionAndLabels_svm_pca = result_svm_pca.select(\"prediction\", \"is_churn\")","dateUpdated":"2017-12-04T22:25:25+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"model_svm_pca: org.apache.spark.ml.tuning.CrossValidatorModel = cv_f9839e31f655\nresult_svm_pca: org.apache.spark.sql.DataFrame = [msno: string, is_churn: int ... 15 more fields]\npredictionAndLabels_svm_pca: org.apache.spark.sql.DataFrame = [prediction: double, is_churn: int]\n"}]},"apps":[],"jobName":"paragraph_1512426325399_613775430","id":"20171202-033004_1164512797","dateCreated":"2017-12-04T22:25:25+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:1414"},{"text":"println(\"Evaluation of SVM model with dimensionality reduction\")\nval evaluator_svm_pca = new MulticlassClassificationEvaluator().setMetricName(\"weightedPrecision\").setLabelCol(\"is_churn\")\nprintln(\"Precision:\" + evaluator_svm_pca.evaluate(predictionAndLabels_svm_pca))\nval evaluator1_svm_pca = new MulticlassClassificationEvaluator().setMetricName(\"weightedRecall\").setLabelCol(\"is_churn\")\nprintln(\"Recall:\" + evaluator1_svm_pca.evaluate(predictionAndLabels_svm_pca))","dateUpdated":"2017-12-04T22:25:25+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"Evaluation of SVM model with dimensionality reduction\nevaluator_svm_pca: org.apache.spark.ml.evaluation.MulticlassClassificationEvaluator = mcEval_0cc952fece2c\nPrecision:0.9020167550630386\nevaluator1_svm_pca: org.apache.spark.ml.evaluation.MulticlassClassificationEvaluator = mcEval_b20f5ad47094\nRecall:0.933925332353684\n"}]},"apps":[],"jobName":"paragraph_1512426325400_611851685","id":"20171202-033104_836611962","dateCreated":"2017-12-04T22:25:25+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:1415"},{"dateUpdated":"2017-12-04T22:25:25+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1512426325400_611851685","id":"20171202-034429_141255088","dateCreated":"2017-12-04T22:25:25+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:1416"}],"name":"sample","id":"2D1Y67RZH","angularObjects":{"2BRWU4WXC:shared_process":[],"2AM1YV5CU:shared_process":[],"2AJXGMUUJ:shared_process":[],"2ANGGHHMQ:shared_process":[],"2AKK3QQXU:shared_process":[]},"config":{"looknfeel":"default","personalizedMode":"false"},"info":{}}